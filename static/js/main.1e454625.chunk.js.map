{"version":3,"sources":["Components/Common/Button/Button.js","Components/Common/Input/InputText.js","Components/Common/Input/InputDate.js","Components/Common/TodoForm/TodoForm.js","Components/Common/TodoItem/TodoItem.js","Components/Common/TodoItemList/TodoItemList.js","Components/Common/TodoLeftContainer/TodoLeftContainer.js","Components/Common/TodoRightContainer/TodoRightContainer.js","Components/Pages/TodoTaskMainContainer/TodoMainContainer.js","Root.js","index.js"],"names":["Button","props","buttonClickHandler","id","this","className","onClick","buttonText","React","Component","InputText","onChangeHandler","event","target","value","type","error","placeholder","onChange","InputDate","TodoForm","finalText","trim","itemForStorage","localStorage","getItem","removeItem","setItem","setState","searchText","onAddTextChangeHandler","addText","onDueDateChangeHandler","dueDate","validateForm","addTextError","addTextErrorMessage","dueDateError","dueDateErrorMessage","state","formError","addTaskClickHandler","lastStoredId","todoTaskData","JSON","parse","taskData","parseInt","taskName","taskDueDate","status","Priority","colorScheme","push","stringify","toString","refreshTodoList","markAllDoneClickHandler","todoList","map","item","searchClickHandler","triggerSearch","selectPriorioty","selectColorScheme","errorMessage","style","padding","class","TodoItem","featureToggle","showFeatures","checked","onEditTask","editTask","task","onMarkCompleteTask","refresh","updateTaskHandler","color","paddingRight","TodoItemList","searchTodoList","finalData","filter","includes","totalData","length","searchResult","nextProps","header","key","updateList","TodoLeftContainer","TodoRightContainer","deleteTask","TodoMainContainer","refreshList","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e454625.chunk.js","sourcesContent":["//3rd npm import\r\nimport React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  buttonClickHandler = () => {\r\n    this.props.buttonClickHandler();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        id={this.props.id}\r\n        className=\"btn btn-success\"\r\n        onClick={this.buttonClickHandler}\r\n      >\r\n        {this.props.buttonText}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","//3rd npm import\r\nimport React from \"react\";\r\n\r\nclass InputText extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.props.onChangeHandler(event.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        id={this.props.id}\r\n        className={this.props.error? \"form-control errorHighlighter\": \"form-control\"}\r\n        placeholder={this.props.placeholder}\r\n        onChange={this.onChangeHandler}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputText;\r\n","//3rd npm import\r\nimport React from \"react\";\r\n\r\nclass InputDate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.props.onChangeHandler(event.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"date\"\r\n        id={this.props.id}\r\n        className=\"form-control\"\r\n        placeholder={this.props.placeholder}\r\n        onChange={this.onChangeHandler}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputDate;\r\n","//3rd party npm\r\nimport React from \"react\";\r\n\r\n//component import\r\nimport Button from \"../Button/Button\";\r\nimport InputText from \"../Input/InputText\";\r\nimport InputDate from \"../Input/InputDate\";\r\n\r\nclass TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addText: \"\",\r\n      addTextError: false,\r\n      addTextErrorMessage: \"\",\r\n      dueDate: \"\",\r\n      dueDateError: false,\r\n      dueDateErrorMessage: \"\",\r\n      formError: false,\r\n      Priority: 1,\r\n      colorScheme: 1,\r\n    };\r\n  }\r\n\r\n  onChangeHandler = (value) => {\r\n    let finalText = value.trim();\r\n    let itemForStorage = localStorage.getItem(\"TASKMANAGER_SEARCHTEXT\");\r\n    if (itemForStorage && itemForStorage !== \"\") {\r\n      localStorage.removeItem(\"TASKMANAGER_SEARCHTEXT\");\r\n      localStorage.setItem(\"TASKMANAGER_SEARCHTEXT\", finalText);\r\n    } else {\r\n      localStorage.setItem(\"TASKMANAGER_SEARCHTEXT\", finalText);\r\n    }\r\n    this.setState({ searchText: finalText });\r\n  };\r\n\r\n  onAddTextChangeHandler = (value) => {\r\n    debugger;\r\n    let finalText = value;\r\n    this.setState({ addText: finalText });\r\n  };\r\n\r\n  onDueDateChangeHandler = (value) => {\r\n    this.setState({ dueDate: value });\r\n  };\r\n\r\n  validateForm = () => {\r\n    let error = false;\r\n    let addTextError = false;\r\n    let addTextErrorMessage = \"\";\r\n    let dueDateError = false;\r\n    let dueDateErrorMessage = \"\";\r\n    if (this.state.addText === \"\") {\r\n      error = true;\r\n      addTextError = true;\r\n      addTextErrorMessage = \"Please enter a Task\";\r\n    }\r\n    if (this.state.dueDate === \"\") {\r\n      error = true;\r\n      dueDateError = true;\r\n      dueDateErrorMessage = \"Please enter the Due Date\";\r\n    }\r\n\r\n    this.setState({\r\n      addTextError,\r\n      addTextErrorMessage,\r\n      dueDateError,\r\n      dueDateErrorMessage,\r\n      formError: error,\r\n    });\r\n    return error;\r\n  };\r\n\r\n  addTaskClickHandler = () => {\r\n    debugger;\r\n    let error = this.validateForm();\r\n    if (!error) {\r\n      let lastStoredId = localStorage.getItem(\"TASKMANAGER_LASTTASKID\");\r\n      let id = 1;\r\n      let todoTaskData = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n      if (todoTaskData && todoTaskData != \"\") {\r\n        todoTaskData = JSON.parse(todoTaskData);\r\n      } else {\r\n        todoTaskData = [];\r\n      }\r\n      let taskData = {};\r\n      if (!lastStoredId || lastStoredId === \"\") {\r\n        taskData.id = id;\r\n        taskData.taskName = this.state.addText;\r\n        taskData.taskDueDate = this.state.dueDate;\r\n      } else {\r\n        id = parseInt(lastStoredId) + 1;\r\n        taskData.id = id;\r\n        taskData.taskName = this.state.addText;\r\n        taskData.taskDueDate = this.state.dueDate;\r\n      }\r\n      taskData.status = 1;\r\n      taskData.Priority = this.state.Priority;\r\n      taskData.colorScheme = this.state.colorScheme;\r\n      todoTaskData.push(taskData);\r\n      localStorage.removeItem(\"TASKMANAGER_DATA\");\r\n      localStorage.setItem(\"TASKMANAGER_DATA\", JSON.stringify(todoTaskData));\r\n      localStorage.setItem(\"TASKMANAGER_LASTTASKID\", id.toString());\r\n      this.setState({ addText: \"\", dueDate: \"\", Priority: 1, colorScheme: 1 });\r\n      this.props.refreshTodoList();\r\n    }\r\n  };\r\n\r\n  markAllDoneClickHandler = () => {\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    todoList.map((item) => {\r\n      item.status = 2;\r\n    });\r\n    localStorage.removeItem(\"TASKMANAGER_DATA\");\r\n    localStorage.setItem(\"TASKMANAGER_DATA\", JSON.stringify(todoList));\r\n    this.props.refreshTodoList();\r\n  };\r\n\r\n  searchClickHandler = () => {\r\n    debugger\r\n    this.props.triggerSearch(this.state.addText)\r\n  }\r\n\r\n  selectPriorioty = (value) => {\r\n    this.setState({ Priority: value });\r\n  };\r\n\r\n  selectColorScheme = (value) => {\r\n    this.setState({ colorScheme: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputText\r\n          id=\"taskName\"\r\n          onChangeHandler={this.onAddTextChangeHandler}\r\n          placeholder=\"ENTER NAME\"\r\n          value={this.state.addText}\r\n          error={this.state.addTextError}\r\n          errorMessage={this.state.addTextErrorMessage}\r\n        />\r\n        <InputDate\r\n          id=\"taskDueDate\"\r\n          onChangeHandler={this.onDueDateChangeHandler}\r\n          placeholder=\"Enter Due Dates\"\r\n          value={this.state.dueDate}\r\n          error={this.state.dueDateError}\r\n          errorMessage={this.state.dueDateErrorMessage}\r\n        />\r\n        <br />\r\n        <h5>\r\n          Priority:{\" \"}\r\n          <strong>\r\n            {this.state.Priority === 1\r\n              ? \"HIGH\"\r\n              : this.state.Priority === 2\r\n              ? \"MEDIUM\"\r\n              : \"LOW\"}\r\n          </strong>\r\n        </h5>\r\n        <div className=\"flex priorityConatiner\" style={{ padding: \"10px 0\" }}>\r\n          <span\r\n            class=\"badge badge-primary\"\r\n            onClick={() => {\r\n              this.selectPriorioty(1);\r\n            }}\r\n          >\r\n            HIGH\r\n          </span>\r\n          <span\r\n            class=\"badge badge-warning\"\r\n            onClick={() => {\r\n              this.selectPriorioty(2);\r\n            }}\r\n          >\r\n            MEDIUM\r\n          </span>\r\n          <span\r\n            class=\"badge badge-secondary\"\r\n            onClick={() => {\r\n              this.selectPriorioty(3);\r\n            }}\r\n          >\r\n            LOW\r\n          </span>\r\n        </div>\r\n\r\n        <br />\r\n        <h5>\r\n          Label:{\" \"}\r\n          <strong>\r\n            {this.state.colorScheme === 1\r\n              ? \"P0\"\r\n              : this.state.colorScheme === 2\r\n              ? \"P1\"\r\n              : \"P2\"}\r\n          </strong>\r\n        </h5>\r\n        <div className=\"flex priorityConatiner\" style={{ padding: \"10px 0\" }}>\r\n          <span\r\n            class=\"badge badge-primary\"\r\n            onClick={() => {\r\n              this.selectColorScheme(1);\r\n            }}\r\n          >\r\n            P0\r\n          </span>\r\n          <span\r\n            class=\"badge badge-warning\"\r\n            onClick={() => {\r\n              this.selectColorScheme(2);\r\n            }}\r\n          >\r\n            P1\r\n          </span>\r\n          <span\r\n            class=\"badge badge-secondary\"\r\n            onClick={() => {\r\n              this.selectColorScheme(3);\r\n            }}\r\n          >\r\n            P2\r\n          </span>\r\n        </div>\r\n\r\n        {this.state.formError ? (\r\n          <div className=\"errorMessage\">\r\n            {this.state.addTextError\r\n              ? this.state.addTextErrorMessage\r\n              : this.state.dueDateError\r\n              ? this.state.dueDateErrorMessage\r\n              : \"Please fill the details\"}\r\n          </div>\r\n        ) : null}\r\n        <Button\r\n          buttonText=\"Add Task\"\r\n          id=\"addTask\"\r\n          buttonClickHandler={this.addTaskClickHandler}\r\n        />\r\n        <Button\r\n          buttonText=\"Mark All Done\"\r\n          id=\"markAllDone\"\r\n          buttonClickHandler={this.markAllDoneClickHandler}\r\n        />\r\n        <Button\r\n          buttonText=\"Search\"\r\n          id=\"searchTask\"\r\n          buttonClickHandler={this.searchClickHandler}\r\n        />\r\n        <hr />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\n\r\nimport InputText from \"../Input/InputText\";\r\nimport InputDate from \"../Input/InputDate\";\r\nimport Button from \"../Button/Button\";\r\n\r\nclass TodoItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showFeatures: false,\r\n      editTask: false,\r\n      taskName: \"\",\r\n      dueDate: \"\",\r\n    };\r\n  }\r\n\r\n  featureToggle = (event) => {\r\n    debugger;\r\n    this.setState({ showFeatures: event.target.checked });\r\n  };\r\n\r\n  onEditTask = () => {\r\n    this.setState({\r\n      editTask: true,\r\n      taskName: this.props.task.taskName,\r\n      dueDate: this.props.task.taskDueDate,\r\n    });\r\n  };\r\n\r\n  onMarkCompleteTask = () => {\r\n    let todoTaskData = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoTaskData && todoTaskData != \"\") {\r\n      todoTaskData = JSON.parse(todoTaskData);\r\n    } else {\r\n      todoTaskData = [];\r\n    }\r\n    todoTaskData.map((item) => {\r\n      if (item.id === this.props.task.id) {\r\n        item.status = 2;\r\n      }\r\n    });\r\n    localStorage.removeItem(\"TASKMANAGER_DATA\");\r\n    localStorage.setItem(\"TASKMANAGER_DATA\", JSON.stringify(todoTaskData));\r\n    this.props.refresh();\r\n    this.setState({\r\n      showFeatures: false,\r\n      editTask: false,\r\n      taskName: \"\",\r\n      dueDate: \"\",\r\n    });\r\n  };\r\n\r\n  onAddTextChangeHandler = (value) => {\r\n    debugger;\r\n    this.setState({ taskName: value });\r\n  };\r\n\r\n  onDueDateChangeHandler = (value) => {\r\n    this.setState({ dueDate: value });\r\n  };\r\n\r\n  updateTaskHandler = () => {\r\n    let todoTaskData = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoTaskData && todoTaskData != \"\") {\r\n      todoTaskData = JSON.parse(todoTaskData);\r\n    } else {\r\n      todoTaskData = [];\r\n    }\r\n    todoTaskData.map((item) => {\r\n      if (item.id === this.props.task.id) {\r\n        item.taskName = this.state.taskName;\r\n        item.taskDueDate = this.state.dueDate;\r\n      }\r\n    });\r\n    localStorage.removeItem(\"TASKMANAGER_DATA\");\r\n    localStorage.setItem(\"TASKMANAGER_DATA\", JSON.stringify(todoTaskData));\r\n    this.props.refresh();\r\n    this.setState({\r\n      showFeatures: false,\r\n      editTask: false,\r\n      taskName: \"\",\r\n      dueDate: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ui-state-default\">\r\n        <div className=\"checkbox flex flexRow\">\r\n          <label className=\"col-md-4\">\r\n            {this.props.task.id === 0 ? null : (\r\n              <>\r\n                {this.state.editTask ? null : (\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value=\"\"\r\n                    onChange={this.featureToggle}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n            {this.state.editTask ? (\r\n              <InputText\r\n                id=\"taskName\"\r\n                onChangeHandler={this.onAddTextChangeHandler}\r\n                placeholder=\"Update Task\"\r\n                value={this.state.taskName}\r\n                error={this.state.addTextError}\r\n                errorMessage={this.state.addTextErrorMessage}\r\n              />\r\n            ) : (\r\n              this.props.task.taskName\r\n            )}\r\n          </label>\r\n          {this.state.showFeatures && !this.state.editTask ? (\r\n            <>\r\n              <span\r\n                className=\"editTask\"\r\n                id={this.props.task.id}\r\n                onClick={() => {\r\n                  this.onEditTask();\r\n                }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-edit\"\r\n                  style={{ color: \"red\", paddingRight: \"10px\" }}\r\n                ></i>\r\n              </span>\r\n              <span\r\n                className=\"completeTask\"\r\n                id={this.props.task.id}\r\n                onClick={() => {\r\n                  this.onMarkCompleteTask();\r\n                }}\r\n              >\r\n                <i className=\"fa fa-thumbs-up\" style={{ color: \"green\" }}></i>\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {this.state.editTask ? (\r\n                <InputDate\r\n                  id=\"taskDueDate\"\r\n                  onChangeHandler={this.onDueDateChangeHandler}\r\n                  placeholder=\"Enter Due Dates\"\r\n                  value={this.state.dueDate}\r\n                  error={this.state.dueDateError}\r\n                  errorMessage={this.state.dueDateErrorMessage}\r\n                />\r\n              ) : (\r\n                <>\r\n                  <div className=\"dueDate col-md-3\">\r\n                    {this.props.task.Priority === 1 ? (\r\n                      <span class=\"badge badge-primary\">HIGH</span>\r\n                    ) : this.props.task.Priority === 2 ? (\r\n                      <span class=\"badge badge-warning\">MEDIUM</span>\r\n                    ) : this.props.task.Priority === 3 ? (\r\n                      <span class=\"badge badge-secondary\">LOW</span>\r\n                    ) : (\r\n                      this.props.task.Priority\r\n                    )}\r\n                  </div>\r\n                  <div className=\"dueDate col-md-3\">\r\n                    {this.props.task.colorScheme === 1 ? (\r\n                      <span class=\"badge badge-primary\">P0</span>\r\n                    ) : this.props.task.colorScheme === 2 ? (\r\n                      <span class=\"badge badge-warning\">P1</span>\r\n                    ) : this.props.task.colorScheme === 3 ? (\r\n                      <span class=\"badge badge-secondary\">P2</span>\r\n                    ) : (\r\n                      this.props.task.colorScheme\r\n                    )}\r\n                  </div>\r\n                  <div className=\"dueDate col-md-3\">\r\n                    {this.props.task.taskDueDate}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n          {this.state.editTask ? (\r\n            <Button\r\n              buttonText=\"Update Task\"\r\n              id=\"updateTask\"\r\n              buttonClickHandler={this.updateTaskHandler}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\n\r\nclass TodoItemList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoList: [],\r\n      searchResult: false,\r\n      totalData: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    this.setState({ todoList: todoList });\r\n  }\r\n\r\n  refresh = () => {\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    this.setState({ todoList: todoList });\r\n  };\r\n\r\n  searchTodoList = (searchText) => {\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    let finalData = todoList.filter((item) =>\r\n      item.taskName.includes(searchText)\r\n    );\r\n    this.setState({ todoList: finalData, totalData: todoList.length });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    debugger;\r\n    if (nextProps.refreshTodoList !== this.props.refreshTodoList) {\r\n      this.refresh();\r\n      this.setState({ searchResult: false });\r\n    }\r\n    if (nextProps.triggerSearch != this.props.triggerSearch) {\r\n      this.searchTodoList(nextProps.searchText);\r\n      this.setState({ searchResult: true });\r\n    }\r\n  }\r\n  render() {\r\n    let header = {\r\n      id: 0,\r\n      taskName: \"Task\",\r\n      taskDueDate: \"Due Date\",\r\n      Priority: \"Priority\",\r\n      colorScheme: \"Label\",\r\n    };\r\n    return (\r\n      <>\r\n        {this.state.searchResult ? (\r\n          <h6>\r\n            Result:{\" \"}\r\n            <span>\r\n              <strong>{`${this.state.todoList.length} out of ${this.state.totalData}`}</strong>\r\n            </span>\r\n          </h6>\r\n        ) : null}\r\n        <ul id=\"sortable\" className=\"list-unstyled\">\r\n          {this.state.todoList.length > 0 ? (\r\n            <TodoItem key={header.id} task={header} />\r\n          ) : null}\r\n          {this.state.todoList\r\n            .filter((item) => item.status === 1)\r\n            .map((item) => {\r\n              return (\r\n                <TodoItem\r\n                  task={item}\r\n                  key={item.id}\r\n                  refresh={this.props.updateList}\r\n                />\r\n              );\r\n            })}\r\n        </ul>\r\n        {this.state.searchResult ? null : (\r\n          <div className=\"todo-footer\">\r\n            <strong>\r\n              <span className=\"count-todos\">\r\n                {this.state.todoList.filter((item) => item.status === 1).length}\r\n              </span>\r\n            </strong>{\" \"}\r\n            Items Left\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React from \"react\";\r\n\r\nimport TodoForm from \"../TodoForm/TodoForm\";\r\nimport TodoItemList from \"../TodoItemList/TodoItemList\";\r\n\r\nclass TodoLeftContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n      triggerSearch: false,\r\n    };\r\n  }\r\n\r\n  refreshTodoList = () => {\r\n    this.props.refreshTodoList();\r\n  };\r\n  triggerSearch = (value) => {\r\n    this.setState({\r\n      searchText: value,\r\n      triggerSearch: !this.state.triggerSearch,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"todolist not-done\">\r\n          <h1>Task Manager</h1>\r\n          <TodoForm\r\n            refreshTodoList={this.refreshTodoList}\r\n            triggerSearch={this.triggerSearch}\r\n          />\r\n          <TodoItemList\r\n            refreshTodoList={this.props.refresh}\r\n            updateList={this.props.refreshTodoList}\r\n            triggerSearch={this.state.triggerSearch}\r\n            searchText={this.state.searchText}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoLeftContainer;\r\n","import React from \"react\";\r\n\r\nclass TodoRightContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoList: [],\r\n    };\r\n  }\r\n\r\n  refresh = () => {\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    let finalData = todoList.filter((item) => item.status === 2);\r\n    this.setState({ todoList: finalData });\r\n  };\r\n\r\n  componentDidMount() {\r\n    debugger;\r\n    this.refresh();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    debugger;\r\n    if (nextProps.refresh != this.props.refresh) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    debugger;\r\n    let todoList = localStorage.getItem(\"TASKMANAGER_DATA\");\r\n    if (todoList && todoList !== \"\") {\r\n      todoList = JSON.parse(todoList);\r\n    } else {\r\n      todoList = [];\r\n    }\r\n    let finalData = [];\r\n    todoList.map((item) => {\r\n      if (item.id != parseInt(id)) {\r\n        finalData.push(item);\r\n      }\r\n    });\r\n    localStorage.removeItem(\"TASKMANAGER_DATA\");\r\n    localStorage.setItem(\"TASKMANAGER_DATA\", JSON.stringify(finalData));\r\n    this.props.refreshTodoList();\r\n  };\r\n\r\n  render() {\r\n    debugger;\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"todolist\">\r\n          <h1>Completed Task</h1>\r\n          <ul id=\"done-items\" className=\"list-unstyled\">\r\n            {this.state.todoList.map((item) => {\r\n              return (\r\n                <li>\r\n                  {item.taskName}\r\n                  <button\r\n                    className=\"remove-item btn btn-default btn-xs pull-right\"\r\n                    id={item.id}\r\n                    onClick={() => {\r\n                      this.deleteTask(item.id)\r\n                    }}\r\n                  >\r\n                    <span className=\"glyphicon glyphicon-remove\"></span>\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <div className=\"todo-footer\">\r\n            <strong>\r\n              <span className=\"count-todos\">\r\n                {this.state.todoList.length}\r\n              </span>\r\n            </strong>{\" \"}\r\n            Total\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoRightContainer;\r\n","//3rd npm import\r\nimport React from \"react\";\r\n\r\nimport TodoLeftContainer from \"../../Common/TodoLeftContainer/TodoLeftContainer\";\r\nimport TodoRightContainer from \"../../Common/TodoRightContainer/TodoRightContainer\";\r\n\r\n//css import\r\nimport \"./TodoMainContainer.css\";\r\n\r\nclass TodoMainContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      refreshList: false,\r\n    };\r\n  }\r\n\r\n  refreshTodoList = () => {\r\n    debugger\r\n    this.setState({ refreshList: !this.state.refreshList });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <TodoLeftContainer\r\n            refreshTodoList={this.refreshTodoList}\r\n            refresh={this.state.refreshList}\r\n          />\r\n          <TodoRightContainer\r\n            refreshTodoList={this.refreshTodoList}\r\n            refresh={this.state.refreshList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoMainContainer;\r\n","//3rd npm import\nimport React from \"react\";\n\n//components import\nimport TodoMainContainer from \"./Components/Pages/TodoTaskMainContainer/TodoMainContainer\";\n\n//css import\nimport \"./Root.css\";\n\nclass Root extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoMainContainer />\n      </div>\n    );\n  }\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}